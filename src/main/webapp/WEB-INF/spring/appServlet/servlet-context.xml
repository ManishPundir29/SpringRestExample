<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.2.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>	
	
	<context:component-scan base-package="com.journaldev.spring " />
	
	
	<!-- <context:property-placeholder location="classpath:jdbc.properties" />  changes by Sonu kumar
 -->
	<beans:bean id="postgresDS" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="org.postgresql.Driver" />
	<beans:property name="url" value="jdbc:postgresql://10.25.214.230:5434/emp" />
		<beans:property name="username" value="postgres" />
		<beans:property name="password" value="postgres" />
		<!-- <property name="defaultAutoCommit" value="false" /> -->
		<beans:property name="maxTotal" value="5" />
		<beans:property name="maxIdle" value="3" />
		<beans:property name="minIdle" value="3" />
		<beans:property name="maxWaitMillis" value="50" />
		<beans:property name="initialSize" value="3" />
		<beans:property name="timeBetweenEvictionRunsMillis" value="30000" />
		<beans:property name="numTestsPerEvictionRun" value="3" />
		<beans:property name="poolPreparedStatements" value="false" />
		<beans:property name="accessToUnderlyingConnectionAllowed" value="false" />
		<beans:property name="removeAbandonedOnBorrow" value="true" />
	 </beans:bean>
	 
	 <!-- Creating TransactionManager Bean, since JDBC we are creating of type  "DataSourceTransactionManager" -->

	<beans:bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManagerForpostgresDS" >
		<beans:property name="dataSource" ref="postgresDS" />
		<!-- <beans:qualifier value="postgresDS" /> -->
	</beans:bean>
	
	 
</beans:beans>
